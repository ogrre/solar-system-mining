name: Laravel Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    env:
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: secret

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo_pgsql, redis
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy .env
      run: cp .env.example .env

    - name: Install PHP Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM Dependencies
      run: npm ci

    - name: Build Assets
      run: npm run build

    - name: Generate key
      run: php artisan key:generate

    - name: Clear Config Cache
      run: php artisan config:clear

    - name: Set APP_KEY environment variable
      run: echo "APP_KEY=$(php artisan --no-ansi key:generate --show)" >> $GITHUB_ENV

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: php artisan migrate --force

    - name: Run Code Style Check
      run: ./vendor/bin/pint --test

    - name: Run Static Analysis
      run: php -d memory_limit=1G ./vendor/bin/phpstan analyse --configuration=phpstan.neon

    - name: Run Rector Check
      run: ./vendor/bin/rector --dry-run --config=rector.php

    - name: Run Tests
      run: php artisan test
